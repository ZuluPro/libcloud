[tox]
envlist = py2.5,py2.6,py2.7,pypypy,py3.2,py3.3,py3.4,lint
setenv =
    PIP_USE_MIRRORS=1

[testenv]
deps = -r{toxinidir}/requirements-tests.txt
       backports.ssl_match_hostname
       unittest2
       lockfile
       paramiko
commands = cp libcloud/test/secrets.py-dist libcloud/test/secrets.py
           python setup.py test

[testenv:py2.5]
setenv = PIP_INSECURE=1
deps = -r{toxinidir}/requirements-tests.txt
       backports.ssl_match_hostname
       unittest2
       lockfile
       ssl
       simplejson
       paramiko

[testenv:pypypy]
deps = -r{toxinidir}/requirements-tests.txt
       backports.ssl_match_hostname
       unittest2
       lockfile

[testenv:py3.2]
deps = -r{toxinidir}/requirements-tests.txt
       lockfile

[testenv:py3.3]
deps = -r{toxinidir}/requirements-tests.txt
       lockfile

[testenv:py3.4]
# At some point we can switch to use the stdlib provided mock module on
# Python3.4+
deps = -r{toxinidir}/requirements-tests.txt
       lockfile

[testenv:docs]
deps = sphinx
       pysphere
       backports.ssl_match_hostname
basepython = python2.7
changedir = docs
commands = python ../contrib/generate_provider_feature_matrix_table.py
           sphinx-apidoc -d 2 ../libcloud/ -o apidocs/
           sphinx-build -b html -d {envtmpdir}/doctrees . _build/html

[testenv:scrape-ec2-prices]
deps = requests
       demjson
basepython = python2.7
commands = python contrib/scrape-ec2-prices.py

[testenv:pylint]
depds = pylint
       backports.ssl_match_hostname
commands = pylint --rcfile=.pylintrc -E libcloud/

[testenv:lint]
deps = -r{toxinidir}/requirements-tests.txt
       backports.ssl_match_hostname

commands = flake8 --ignore=E402 --exclude="test" libcloud/
           flake8 --ignore=E402 --max-line-length=160 libcloud/test/
           flake8 --ignore=E402 demos/
           flake8 --ignore=E402,E902 docs/examples/
           flake8 --ignore=E402,E902 --max-line-length=160 contrib/
           python -mjson.tool libcloud/data/pricing.json
